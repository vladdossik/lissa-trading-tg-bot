server:
  port: 8083

bot:
  token: ${BOT_TOKEN}
  name: "lissa_trading_bot"

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/lissa-trading-db
    username: postgres
    password: root-password-123
    driver-class-name: org.postgresql.Driver
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        default_schema: tg_bot_db

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml
    default-schema: tg_bot_db

security:
  internal:
    token: SXE2VnU4Tno3WGEzUmw5Q201WWJUYzJXcERmNE9qNVpmR24xS2gz

cache:
  caffeine:
    expire-after-write: 5 # в минутах
    maximum-size: 100

integration:
  rest:
    auth-service-url: http://localhost:8081
    user-service:
      url: http://localhost:8080
      token: YzNSaGRHbHpkR2xqY3kxcGJuUmxjbTVoYkMxclpYaz0K

  rabbit:
      exchanges:
        user-notifications: user-notifications-exchange
      user-service:
        queues:
          favourite-stocks-queue:
            name: user-service-favourite-stocks
            routing-key: userService.favourite-stocks
          user-update-queue:
            name: user-service-user-update
            routing-key: userService.user-update
      tg-bot:
        queues:
          favorite-stocks-queue:
            name: tg-bot-favorite-stocks
            routing-key: tgBot.favourite-stocks
          user-update-queue:
            name: tg-bot-user-update
            routing-key: tgBot.user-update

telegram-bot:
  notification:
    checkPriceChangesInterval: 60000 # интервал проверки цен, миллисекунды
    priceChangeWindowMinutes: 60 # сравнение цены за час
    criticalPriceChangePercentage: 3 # отклонение на 3% критичное

logging:
  level:
    root: info

logstash:
  host: localhost  # Хост Logstash
  port: 5000 # Порт Logstash